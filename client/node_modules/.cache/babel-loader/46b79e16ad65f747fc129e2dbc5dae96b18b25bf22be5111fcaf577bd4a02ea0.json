{"ast":null,"code":"var _jsxFileName = \"B:\\\\React App\\\\pulling tic-tac-toe multiplayer from github\\\\Tic-Tac-Toe-Multiplayer\\\\client\\\\src\\\\Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport SingleGrid from './SingleGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Grid({\n  socket,\n  user_data,\n  matrix,\n  setMatrix,\n  isRoomFull\n}) {\n  _s();\n  const [user_lis, setUserLis] = useState([]);\n  const [myTurn, setMyTurn] = useState(user_data.data.client_turn === 'X' ? true : false);\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('get_matrix', mat => {\n      console.log(\"got the matrix\", matrix);\n      setMatrix(mat);\n    });\n\n    //  receving user using call back \n    socket.emit('get_user_lis', response => {\n      console.log('calling for data ', response);\n      setUserLis(response);\n    });\n\n    // Listen for user list updates\n    socket.on('update_user_lis', updatedUserLis => {\n      console.log('updated user list', updatedUserLis);\n      setUserLis(updatedUserLis);\n    });\n    socket.on('update_move', () => setMyTurn(true));\n    return () => {\n      socket.off('get_matrix');\n    };\n  }, [socket, setMatrix, matrix]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" flex justify-center items-center flex-col gap-4 \",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-5xl\",\n        children: [\"Welcome \", user_data.data.client_user_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-3xl\",\n        children: [\"You are a \", user_data.data.client_turn, \" player\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), isRoomFull ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: myTurn ? \"Your Turn\" : \"wait for other player to take his turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Wait for other user to join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rounded-md grid grid-cols-3 gap-3 bg-yellow-500 p-3 `,\n        children: matrix ? matrix.map((row, rowIdx) => row.map((cell, cellIdx) => /*#__PURE__*/_jsxDEV(SingleGrid, {\n          cell_value: cell,\n          matrix: matrix,\n          socket: socket,\n          turn: user_data.data.client_turn,\n          room_id: user_data.data.client_user_room_id,\n          rowind: rowIdx,\n          colind: cellIdx,\n          myTurn: myTurn,\n          setMyTurn: setMyTurn,\n          isRoomFull: isRoomFull\n        }, `${rowIdx}_${cellIdx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }, this))) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute p-2 bottom-6 right-4\",\n      children: user_lis.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p-2 bg-slate-300 rounded-md\",\n        children: [\" \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Grid, \"9Z7yadYRbd5ysfKYcz7kGd0aKgQ=\");\n_c = Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useEffect","useState","SingleGrid","jsxDEV","_jsxDEV","Grid","socket","user_data","matrix","setMatrix","isRoomFull","_s","user_lis","setUserLis","myTurn","setMyTurn","data","client_turn","on","mat","console","log","emit","response","updatedUserLis","off","className","children","client_user_name","fileName","_jsxFileName","lineNumber","columnNumber","map","row","rowIdx","cell","cellIdx","cell_value","turn","room_id","client_user_room_id","rowind","colind","user","_c","$RefreshReg$"],"sources":["B:/React App/pulling tic-tac-toe multiplayer from github/Tic-Tac-Toe-Multiplayer/client/src/Grid.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport SingleGrid from './SingleGrid'\n\nexport default function Grid({socket,user_data,matrix,setMatrix,isRoomFull}) {\n    \n    const [user_lis ,setUserLis] = useState([]);                  \n    const [myTurn,setMyTurn] = useState((user_data.data.client_turn === 'X' ? true : false));     \n    \n    useEffect(()=>{\n        if(!socket) return;\n         socket.on('get_matrix',(mat)=>{\n            console.log(\"got the matrix\",matrix)    \n            setMatrix(mat);\n         })\n        \n\n        //  receving user using call back \n        socket.emit('get_user_lis',(response)=>{\n            console.log('calling for data ',response);\n            setUserLis(response);\n        })\n\n        // Listen for user list updates\n        socket.on('update_user_lis', (updatedUserLis) => {\n            console.log('updated user list', updatedUserLis);\n            setUserLis(updatedUserLis);\n        });\n\n        socket.on('update_move',()=>setMyTurn(true));\n\n\n         return () => {\n            socket.off('get_matrix');\n          }; \n    },[socket,setMatrix,matrix])\n\n\n    \n\n  return (\n    <div className=\"h-screen w-screen \">\n                        \n            {/* status section  */}\n            <div className=\" flex justify-center items-center flex-col gap-4 \">\n            <p className=\"text-5xl\">Welcome {user_data.data.client_user_name}</p>\n                <p className=\"text-3xl\">You are a {user_data.data.client_turn} player</p>\n\n                {isRoomFull ? \n                <p>{myTurn ? \"Your Turn\" : \"wait for other player to take his turn\" }</p>\n                : <p>Wait for other user to join</p> }\n                \n                \n                {/* grid  */}\n                \n                \n                <div className={`rounded-md grid grid-cols-3 gap-3 bg-yellow-500 p-3 `}  >\n                    {/* SingleGrid  */}\n                    {matrix ? (\n                                matrix.map((row, rowIdx) => (\n                                    row.map((cell, cellIdx) => (\n                                    <SingleGrid\n                                        cell_value={cell}\n                                        key={`${rowIdx}_${cellIdx}`}\n                                        matrix={matrix}\n                                        socket={socket}\n                                        turn={user_data.data.client_turn}\n                                        room_id={user_data.data.client_user_room_id}\n                                        rowind={rowIdx}\n                                        colind={cellIdx}\n                                        myTurn={myTurn}\n                                        setMyTurn={setMyTurn}\n                                        isRoomFull={isRoomFull}\n                                    />\n                                    ))\n                                ))\n                                ) : (\n                                <h1>Loading...</h1>\n                                )}\n\n                </div>\n            \n            </div>\n\n            {/* User login status  */}\n            <div className=\"absolute p-2 bottom-6 right-4\"> \n                {user_lis.map(user=>(\n                    \n                    <p className='p-2 bg-slate-300 rounded-md'> {user}</p>\n                    \n                    \n                ))}\n            </div>\n            \n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}